/*	ten.js - lightweight JavaScript/HTML5 library
	@copyright 2012 Kevin von Flotow <vonflow@gmail.com>
	@license MIT License <http://opensource.org/licenses/MIT> */
(function(){function g(a,c){console.log("ten."+a+"(): "+c)}ten={version:"0.0.1",ready:function(a){document.addEventListener("DOMContentLoaded",a,!1)},find:function(a){function c(a,e,b){function d(a){a=a.classList;ten.isString(e)&&(e=e.split(" "));if(ten.isArray(e))for(var f=0;f<e.length;f++){var c=ten.trim(e[f]);"add"==b?a.add(c):"remove"==b?a.remove(c):"toggle"==b&&a.toggle(c)}}0<a.length?a.each(function(a,f){d(f)}):d(a);return a}function d(a,e,b){ten.isString(e)&&(e=[e]);ten.isArray(e)?ten.each(e,
function(e,c){a.innerHTML="append"==b?a.innerHTML+c:"prepend"==b?c+a.innerHTML:"html"==b&&c}):g(b,"invalid parameters");return a}var h=a.replace(/^(?:#|\.)(.*?)$/,"$1"),b={};0===a.indexOf("#")?b=document.getElementById(h):0===a.indexOf(".")&&(b=document.getElementsByClassName(h));b.each=function(a){for(var b=0;b<this.length;b++)a(Object.keys(this)[b],this[b])};b.addClass=function(a){return c(this,a,"add")};b.removeClass=function(a){return c(this,a,"remove")};b.toggle=function(a){return c(this,a,"toggle")};
b.hasClass=function(a){return this.classList.contains(a)};b.append=function(a){return d(this,a,"append")};b.prepend=function(a){return d(this,a,"prepend")};b.html=function(a){return a?d(this,a,"html"):this.innerHTML};b.text=function(){return ten.trim(this.innerHTML.replace(/<.*?>/g," "))};return b},each:function(a,c){var d=!1;if((ten.isArray(a)||ten.isObject(a))&&ten.isFunction(c)){for(d=0;d<a.length;d++)c(d,a[d]);d=!0}else g("each","invalid parameters");return d},isDefined:function(a){return"undefined"!==
typeof a},isString:function(a){return"string"===typeof a},isObject:function(a){return"[object Object]"===Object.prototype.toString.call(a)},isArray:Array.isArray||function(a){return"[object Array]"===Object.prototype.toString.call(a)},isFunction:function(a){return"function"===typeof a},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},trim:function(a){return ten.isString(a)?a.replace(/(^\s+|\s+$)/g,"").replace(/\s\s+/g," "):g("trim","invalid parameters")},ease:function(a){if(ten.isNumeric(a))var c=
!0;else g("ease","must be numeric");return ten.isDefined(c)}}})();
