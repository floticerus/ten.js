/*	ten.js - lightweight JavaScript/HTML5 library
	@copyright 2012 Kevin von Flotow <vonflow@gmail.com>
	@license MIT License <http://opensource.org/licenses/MIT> */
(function(){function e(a,b){console.log("ten."+a+"(): "+b);return!1}function f(a,b,c){var d=a.classList;if(ten.isString(b))d[c](b);else ten.isArray(b)&&ten.each(b,function(a,b){d[c](b)});return a}function g(a,b,c){ten.isString(b)&&(b=[b]);if(ten.isArray(b))for(var d=0;d<b.length;d++)a.innerHTML="append"==c?a.innerHTML+b[d]:"prepend"==c&&b[d]+a.innerHTML;else e(c,"invalid parameters");return a}ten={version:"0.0.3",ajax:function(a){var b={url:!1,type:"GET",data:!1,dataType:"json",success:!1,error:!1,
complete:!1},b=ten.extend(b,a);a=new XMLHttpRequest;a.open(b.type,"/json.php?foo=bar",!0);a.setRequestHeader("Content-Type",{json:"application/json"}[b.dataType]+";charset=UTF-8");a.send()},length:function(a){if(ten.isObject(a)){var b=0,c;for(c in a)a.hasOwnProperty(c)&&b++}else e("length","argument must be an object");return ten.isDefined(b)?b:!1},extend:function(){var a=0<arguments.length?arguments[0]:e("extend","no arguments given");if(!1!==a&&2<=arguments.length){var b=!0;arguments=Array.prototype.slice.call(arguments,
1);for(var c=0;c<arguments.length;c++)ten.each(arguments[c],function(b,c){a[b]=c})}else e("extend","must have at least 2 arguments");return ten.isDefined(b)?a:!1},ready:function(a){document.addEventListener("DOMContentLoaded",a,!1)},find:function(a){var b={};if(ten.isString(a)){var c=a.replace(/^(?:#|\.)(.*?)$/,"$1");0===a.indexOf("#")?b=document.getElementById(c):0===a.indexOf(".")&&(b=document.getElementsByClassName(c))}else b=a;a=b.__proto__;a.addClass=function(a){return f(this,a,"add")};a.removeClass=
function(a){return f(this,a,"remove")};a.toggle=function(a){return f(this,a,"toggle")};a.hasClass=function(a){return this.classList.contains(a)};a.append=function(a){return g(this,a,"append")};a.prepend=function(a){return g(this,a,"prepend")};a.html=function(a){return a?(this.innerHTML=ten.isString(a)?a:ten.isArray(a)?a.join(""):e("html","argument expects a string or array"),this):this.innerHTML};a.each=function(a){for(var b=Object.keys(this),c=0;c<this.length;c++)a(b[c],ten.find(this[c]))};a.text=
function(){return ten.trim(this.innerHTML.replace(/<.*?>/g," "))};return b},each:function(a,b){var c=!1;if(ten.isFunction(b))if(ten.isArray(a))for(var c=!0,d=0;d<a.length;d++)b(d,a[d]);else if(ten.isObject(a))for(key in c=!0,a)b(key,a[key]);else e("each","1st argument expects object or array");else e("each","2nd argument expects function");return c},isDefined:function(a){return"undefined"!==typeof a},isString:function(a){return"string"===typeof a},isObject:function(a){return"[object Object]"===Object.prototype.toString.call(a)},
isArray:Array.isArray||function(a){return"[object Array]"===Object.prototype.toString.call(a)},isFunction:function(a){return"function"===typeof a},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},trim:function(a){function b(a){return a.replace(/(^\s+|\s+$)/g,"").replace(/\s\s+/g," ")}ten.isString(a)?a=b(a):ten.isArray(a)&&ten.each(a,function(c,d){ten.isString(d)&&(a[c]=b(d))});return a},ease:function(a){if(ten.isNumeric(a))var b=!0;else e("ease","must be numeric");return ten.isDefined(b)}}})();
